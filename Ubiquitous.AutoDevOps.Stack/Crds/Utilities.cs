// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Reflection;
using Pulumi.Kubernetes;

namespace Pulumi.crds
{
    static class Utilities
    {
        public static string Version { get; } = GetVersion();

        private static string GetVersion()
        {
            const string utilitiesType = "Pulumi.Kubernetes.Utilities";
            const string versionProperty = "Version";

            Type? type = Assembly.GetAssembly(typeof(Provider))?.GetType(utilitiesType);
            if (type is null)
            {
                throw new InvalidOperationException($"{utilitiesType} type could not be obtained.");
            }

            PropertyInfo? prop = type.GetProperty(versionProperty, BindingFlags.Static | BindingFlags.Public);
            if (prop is null)
            {
                throw new InvalidOperationException($"{utilitiesType}.{versionProperty} property could not be obtained.");
            }

            var result = prop.GetValue(type, null) as string;
            if (result is null)
            {
                throw new InvalidOperationException($"Expected {utilitiesType}.{versionProperty} to return a non-null string.");
            }
            return result;
        }
    }
}
