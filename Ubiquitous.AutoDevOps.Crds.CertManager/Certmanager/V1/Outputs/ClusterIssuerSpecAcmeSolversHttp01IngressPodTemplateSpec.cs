// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using Pulumi;

namespace Ubiquitous.AutoDevOps.Crds.CertManager.Certmanager.V1.Outputs
{

    [OutputType]
    public sealed class ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec
    {
        /// <summary>
        /// If specified, the pod's scheduling constraints
        /// </summary>
        public readonly ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity Affinity;
        /// <summary>
        /// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
        /// </summary>
        public readonly ImmutableDictionary<string, string> NodeSelector;
        /// <summary>
        /// If specified, the pod's priorityClassName.
        /// </summary>
        public readonly string PriorityClassName;
        /// <summary>
        /// If specified, the pod's service account
        /// </summary>
        public readonly string ServiceAccountName;
        /// <summary>
        /// If specified, the pod's tolerations.
        /// </summary>
        public readonly ImmutableArray<ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations> Tolerations;

        [OutputConstructor]
        private ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec(
            ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity affinity,

            ImmutableDictionary<string, string> nodeSelector,

            string priorityClassName,

            string serviceAccountName,

            ImmutableArray<ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations> tolerations)
        {
            Affinity = affinity;
            NodeSelector = nodeSelector;
            PriorityClassName = priorityClassName;
            ServiceAccountName = serviceAccountName;
            Tolerations = tolerations;
        }
    }
}
