// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using Pulumi;

namespace Ubiquitous.AutoDevOps.Crds.CertManager.Certmanager.V1.Outputs
{

    [OutputType]
    public sealed class ClusterIssuerSpec
    {
        /// <summary>
        /// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
        /// </summary>
        public readonly ClusterIssuerSpecAcme Acme;
        /// <summary>
        /// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
        /// </summary>
        public readonly ClusterIssuerSpecCa Ca;
        /// <summary>
        /// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
        /// </summary>
        public readonly ClusterIssuerSpecSelfSigned SelfSigned;
        /// <summary>
        /// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
        /// </summary>
        public readonly ClusterIssuerSpecVault Vault;
        /// <summary>
        /// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
        /// </summary>
        public readonly ClusterIssuerSpecVenafi Venafi;

        [OutputConstructor]
        private ClusterIssuerSpec(
            ClusterIssuerSpecAcme acme,

            ClusterIssuerSpecCa ca,

            ClusterIssuerSpecSelfSigned selfSigned,

            ClusterIssuerSpecVault vault,

            ClusterIssuerSpecVenafi venafi)
        {
            Acme = acme;
            Ca = ca;
            SelfSigned = selfSigned;
            Vault = vault;
            Venafi = venafi;
        }
    }
}
