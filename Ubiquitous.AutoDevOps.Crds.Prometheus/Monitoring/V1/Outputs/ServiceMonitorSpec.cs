// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using Pulumi;

namespace Ubiquitous.AutoDevOps.Crds.Prometheus.Monitoring.V1.Outputs
{

    [OutputType]
    public sealed class ServiceMonitorSpec
    {
        /// <summary>
        /// A list of endpoints allowed as part of this ServiceMonitor.
        /// </summary>
        public readonly ImmutableArray<ServiceMonitorSpecEndpoints> Endpoints;
        /// <summary>
        /// The label to use to retrieve the job name from.
        /// </summary>
        public readonly string JobLabel;
        /// <summary>
        /// Selector to select which namespaces the Endpoints objects are discovered from.
        /// </summary>
        public readonly ServiceMonitorSpecNamespaceSelector NamespaceSelector;
        /// <summary>
        /// PodTargetLabels transfers labels on the Kubernetes Pod onto the target.
        /// </summary>
        public readonly ImmutableArray<string> PodTargetLabels;
        /// <summary>
        /// SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
        /// </summary>
        public readonly int SampleLimit;
        /// <summary>
        /// Selector to select Endpoints objects.
        /// </summary>
        public readonly ServiceMonitorSpecSelector Selector;
        /// <summary>
        /// TargetLabels transfers labels on the Kubernetes Service onto the target.
        /// </summary>
        public readonly ImmutableArray<string> TargetLabels;
        /// <summary>
        /// TargetLimit defines a limit on the number of scraped targets that will be accepted.
        /// </summary>
        public readonly int TargetLimit;

        [OutputConstructor]
        private ServiceMonitorSpec(
            ImmutableArray<ServiceMonitorSpecEndpoints> endpoints,

            string jobLabel,

            ServiceMonitorSpecNamespaceSelector namespaceSelector,

            ImmutableArray<string> podTargetLabels,

            int sampleLimit,

            ServiceMonitorSpecSelector selector,

            ImmutableArray<string> targetLabels,

            int targetLimit)
        {
            Endpoints = endpoints;
            JobLabel = jobLabel;
            NamespaceSelector = namespaceSelector;
            PodTargetLabels = podTargetLabels;
            SampleLimit = sampleLimit;
            Selector = selector;
            TargetLabels = targetLabels;
            TargetLimit = targetLimit;
        }
    }
}
